# ——————题目描述——————：
# 请实现一个函数用来判断字符串是否表示数值（包括整数和小数）。
# 例如，字符串"+100","5e2","-123","3.1416"和"-1E-16"都表示数值。 但是"12e","1a3.14","1.2.3","+-5"和"12e+4.3"都不是。


# ——————解题思路——————：
# 主要是考虑各种情况，遍历字符串，用排除法
#（1）e/E, . 在字符串中只能出现一次
#（2）+, - 要么出现在字符串首，要么出现在 e/E 的后一位
#（3）. 不能出现在 e/E 之后
#（4）e/E 不能出现在末尾
#（5）不能有其它非法字符




# -*- coding:utf-8 -*-
class Solution:
    # s字符串
    def isNumeric(self, s):
        # write code here
        # 讨论各种情况:
        #(1) e, E, . 都只能出现一次
        #（2）e, E 不能出现在末尾
        #（3）+，- 只能出现在字符串首，或者 e/E 后一位
        #（4）e/E 后面不能有小数点，即如果有小数点，小数点必须在 e/E 前
        # (5) 不能出现非法字符
        
        if not s or (len(s) == 1 and (s[0] == "+" or s[0] == "-")):
            return False
        
        if s[0] == "+" or s[0] == "-":
            s = s[1:]
        
        nums = ["0", "1", "2", "3", "4", "5", "6", "7", "8", "9"]
        # 统计 e/E 和小数点的个数
        num_exp, num_dot = 0, 0
        for i in range(len(s)):
            if s[i] == "e" or s[i] == "E":
                if num_exp == 0:
                    num_exp = 1
                else:
                    return False
                # 若 e/E 出现在最后一位
                if i == len(s) - 1:
                    return False
            elif s[i] == "+" or s[i] == "-":
                if s[i-1] != "e" and s[i-1] != "E":  #此处注意要用 and，而不是 or
                    return False
            elif s[i] == ".":
                if num_exp == 1 or num_dot == 1:
                    return False
                elif num_dot == 0:
                    num_dot = 1
            else:
                if s[i] not in nums:
                    return False
        return True
