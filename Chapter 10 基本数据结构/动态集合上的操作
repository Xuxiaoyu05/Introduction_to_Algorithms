# 动态集合：集合在操作过程中可以增大，缩小或发生其它变化，这样的集合称为动态的。

# 动态集合上的操作可分为两类：（1）查询操作 （2）修改操作
#（1）Search(S, k)：查询操作，给定一个集合 S 和关键字 k，返回指向 S 中某个元素的指针 x，使得 x.key = k；如果 S 中没有这样的元素，则返回 None。
#（2）Insert(S, x)：修改操作，将由 x 指向的元素加入到集合 S 中。通常假定元素 x 中集合 S 所需要的每个属性都已经被初始化好了。
#（3）Delete(S, x)：修改操作，给定指针 x 指向集合 S 中的一个元素，从 S 中删除 x。（注意：这个操作取一个指向元素 x 的指针作为输入，而不是一个关键字的值）
#（4）Minimum(S)：查询操作，在全序集 S 上返回一个指向 S 中具有最小关键字元素的指针。
#（5）Maximum(S)：查询操作，在全序集 S 上返回一个指向 S 中具有最大关键字元素的指针。
#（6）Successor(S, x)：查询操作，给定关键字属于全序集 S 的一个元素 x，返回 S 中比 x 大的下一个元素的指针；如果 x 为最大元素，则返回 None。
#（7）Predecessor(S, x)：查询操作，给定关键字属于全序集 S 的一个元素 x，返回 S 中比 x 小的前一个元素的指针；如果 x 为最小元素，则返回 None。

# 在某些情况下，能够将 Successor 和 Predecessor 查询操作推广应用到一些具有相同关键字的集合中。对于一个有 n 个关键字的集合，通常的假设调用一次 Maximum
# 后再调用 n-1 次 Successor，就可以按序枚举出该集合中的所有元素。
