# 习题 12.2-5：证明：如果一棵二叉搜索树中的一个结点有两个孩子，那么它的后继没有左孩子，它的前驱没有右孩子。

# 答：此性质是二叉搜索树的结点删除中会应用到的重要性质。
#     证明：设这个结点为 x, 其左孩子为 x1，右孩子为 x2，则有 x1.key <= x.key <= x2.key。
#           因为 x 的右子树存在，则后继为右子树中数值最小的左孩子 x3，若后继 x3 也有左孩子 x4，则 x.key < x4.key < x3.key，那么 x4 就是 x 的后继了；
#           矛盾。前驱没有右孩子证明如上。


# 习题 12.2-6：考虑一棵二叉搜索树 T，其关键字互不相同。证明：如果 T 中的一个结点 x 的右子树为空，且 x 有一个后继 y，那么 y 一定是 x 的最底层祖先，
#              并且其左孩子也是 x 的祖先。（注意：每个结点都是它自己的祖先）

# 答：证明：最低祖先结点就是从根结点遍历到给定结点时的最后一个相同结点，或最近公共父结点。
#          若 x 是其后继 y 的左孩子，则 x.key < y.key，所以 y 是 x 的最低祖先，y 的左孩子为 x 的祖先（即 x 本身）；
#          若 x 是其后继 y 的右孩子，则 x.key >= y.key，这明显与后继定义矛盾，y 是 x 的前驱，所以 x 不可能是后继 y 的右子树。
#          如果 x 是其后继 y 的左孩子 y1 的右孩子，则 y1.key <= x.key，后继 y 的左孩子 y1 是 x 的祖先，同时 x 是 y 的最低祖先。

